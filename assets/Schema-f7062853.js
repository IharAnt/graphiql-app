import{r as R,a as L,F as le,j as y,d as $e,c as Bt,u as st}from"./index-a5b22cea.js";import{S as Vt}from"./MainPage-e27dbead.js";function I(e,t){if(!Boolean(e))throw new Error(t)}function Z(e){return typeof e=="object"&&e!==null}function Se(e,t){if(!Boolean(e))throw new Error(t??"Unexpected invariant triggered.")}const $t=/\r\n|[\n\r]/g;function Me(e,t){let n=0,i=1;for(const s of e.body.matchAll($t)){if(typeof s.index=="number"||Se(!1),s.index>=t)break;n=s.index+s[0].length,i+=1}return{line:i,column:t+1-n}}function Pt(e){return rt(e.source,Me(e.source,e.start))}function rt(e,t){const n=e.locationOffset.column-1,i="".padStart(n)+e.body,s=t.line-1,r=e.locationOffset.line-1,a=t.line+r,u=t.line===1?n:0,p=t.column+u,f=`${e.name}:${a}:${p}
`,h=i.split(/\r\n|[\n\r]/g),A=h[s];if(A.length>120){const x=Math.floor(p/80),k=p%80,v=[];for(let C=0;C<A.length;C+=80)v.push(A.slice(C,C+80));return f+qe([[`${a} |`,v[0]],...v.slice(1,x+1).map(C=>["|",C]),["|","^".padStart(k)],["|",v[x+1]]])}return f+qe([[`${a-1} |`,h[s-1]],[`${a} |`,A],["|","^".padStart(p)],[`${a+1} |`,h[s+1]]])}function qe(e){const t=e.filter(([i,s])=>s!==void 0),n=Math.max(...t.map(([i])=>i.length));return t.map(([i,s])=>i.padStart(n)+(s?" "+s:"")).join(`
`)}function Gt(e){const t=e[0];return t==null||"kind"in t||"length"in t?{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:t}class g extends Error{constructor(t,...n){var i,s,r;const{nodes:a,source:u,positions:p,path:f,originalError:h,extensions:A}=Gt(n);super(t),this.name="GraphQLError",this.path=f??void 0,this.originalError=h??void 0,this.nodes=Ye(Array.isArray(a)?a:a?[a]:void 0);const x=Ye((i=this.nodes)===null||i===void 0?void 0:i.map(v=>v.loc).filter(v=>v!=null));this.source=u??(x==null||(s=x[0])===null||s===void 0?void 0:s.source),this.positions=p??(x==null?void 0:x.map(v=>v.start)),this.locations=p&&u?p.map(v=>Me(u,v)):x==null?void 0:x.map(v=>Me(v.source,v.start));const k=Z(h==null?void 0:h.extensions)?h==null?void 0:h.extensions:void 0;this.extensions=(r=A??k)!==null&&r!==void 0?r:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),h!=null&&h.stack?Object.defineProperty(this,"stack",{value:h.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,g):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let t=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(t+=`

`+Pt(n.loc));else if(this.source&&this.locations)for(const n of this.locations)t+=`

`+rt(this.source,n);return t}toJSON(){const t={message:this.message};return this.locations!=null&&(t.locations=this.locations),this.path!=null&&(t.path=this.path),this.extensions!=null&&Object.keys(this.extensions).length>0&&(t.extensions=this.extensions),t}}function Ye(e){return e===void 0||e.length===0?void 0:e}function D(e,t,n){return new g(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Qt{constructor(t,n,i){this.start=t.start,this.end=n.end,this.startToken=t,this.endToken=n,this.source=i}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class ot{constructor(t,n,i,s,r,a){this.kind=t,this.start=n,this.end=i,this.line=s,this.column=r,this.value=a,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const at={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},Jt=new Set(Object.keys(at));function ze(e){const t=e==null?void 0:e.kind;return typeof t=="string"&&Jt.has(t)}var X;(function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"})(X||(X={}));var _;(function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"})(_||(_={}));var l;(function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"})(l||(l={}));function je(e){return e===9||e===32}function ye(e){return e>=48&&e<=57}function ct(e){return e>=97&&e<=122||e>=65&&e<=90}function Pe(e){return ct(e)||e===95}function lt(e){return ct(e)||ye(e)||e===95}function qt(e){var t;let n=Number.MAX_SAFE_INTEGER,i=null,s=-1;for(let a=0;a<e.length;++a){var r;const u=e[a],p=Yt(u);p!==u.length&&(i=(r=i)!==null&&r!==void 0?r:a,s=a,a!==0&&p<n&&(n=p))}return e.map((a,u)=>u===0?a:a.slice(n)).slice((t=i)!==null&&t!==void 0?t:0,s+1)}function Yt(e){let t=0;for(;t<e.length&&je(e.charCodeAt(t));)++t;return t}function zt(e,t){const n=e.replace(/"""/g,'\\"""'),i=n.split(/\r\n|[\n\r]/g),s=i.length===1,r=i.length>1&&i.slice(1).every(k=>k.length===0||je(k.charCodeAt(0))),a=n.endsWith('\\"""'),u=e.endsWith('"')&&!a,p=e.endsWith("\\"),f=u||p,h=!(t!=null&&t.minimize)&&(!s||e.length>70||f||r||a);let A="";const x=s&&je(e.charCodeAt(0));return(h&&!x||r)&&(A+=`
`),A+=n,(h||f)&&(A+=`
`),'"""'+A+'"""'}var o;(function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"})(o||(o={}));class Ht{constructor(t){const n=new ot(o.SOF,0,0,0,0);this.source=t,this.lastToken=n,this.token=n,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let t=this.token;if(t.kind!==o.EOF)do if(t.next)t=t.next;else{const n=Wt(this,t.end);t.next=n,n.prev=t,t=n}while(t.kind===o.COMMENT);return t}}function Xt(e){return e===o.BANG||e===o.DOLLAR||e===o.AMP||e===o.PAREN_L||e===o.PAREN_R||e===o.SPREAD||e===o.COLON||e===o.EQUALS||e===o.AT||e===o.BRACKET_L||e===o.BRACKET_R||e===o.BRACE_L||e===o.PIPE||e===o.BRACE_R}function ue(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function we(e,t){return ut(e.charCodeAt(t))&&pt(e.charCodeAt(t+1))}function ut(e){return e>=55296&&e<=56319}function pt(e){return e>=56320&&e<=57343}function ne(e,t){const n=e.source.body.codePointAt(t);if(n===void 0)return o.EOF;if(n>=32&&n<=126){const i=String.fromCodePoint(n);return i==='"'?`'"'`:`"${i}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function w(e,t,n,i,s){const r=e.line,a=1+n-e.lineStart;return new ot(t,n,i,r,a,s)}function Wt(e,t){const n=e.source.body,i=n.length;let s=t;for(;s<i;){const r=n.charCodeAt(s);switch(r){case 65279:case 9:case 32:case 44:++s;continue;case 10:++s,++e.line,e.lineStart=s;continue;case 13:n.charCodeAt(s+1)===10?s+=2:++s,++e.line,e.lineStart=s;continue;case 35:return Zt(e,s);case 33:return w(e,o.BANG,s,s+1);case 36:return w(e,o.DOLLAR,s,s+1);case 38:return w(e,o.AMP,s,s+1);case 40:return w(e,o.PAREN_L,s,s+1);case 41:return w(e,o.PAREN_R,s,s+1);case 46:if(n.charCodeAt(s+1)===46&&n.charCodeAt(s+2)===46)return w(e,o.SPREAD,s,s+3);break;case 58:return w(e,o.COLON,s,s+1);case 61:return w(e,o.EQUALS,s,s+1);case 64:return w(e,o.AT,s,s+1);case 91:return w(e,o.BRACKET_L,s,s+1);case 93:return w(e,o.BRACKET_R,s,s+1);case 123:return w(e,o.BRACE_L,s,s+1);case 124:return w(e,o.PIPE,s,s+1);case 125:return w(e,o.BRACE_R,s,s+1);case 34:return n.charCodeAt(s+1)===34&&n.charCodeAt(s+2)===34?rn(e,s):en(e,s)}if(ye(r)||r===45)return Kt(e,s,r);if(Pe(r))return on(e,s);throw D(e.source,s,r===39?`Unexpected single quote character ('), did you mean to use a double quote (")?`:ue(r)||we(n,s)?`Unexpected character: ${ne(e,s)}.`:`Invalid character: ${ne(e,s)}.`)}return w(e,o.EOF,i,i)}function Zt(e,t){const n=e.source.body,i=n.length;let s=t+1;for(;s<i;){const r=n.charCodeAt(s);if(r===10||r===13)break;if(ue(r))++s;else if(we(n,s))s+=2;else break}return w(e,o.COMMENT,t,s,n.slice(t+1,s))}function Kt(e,t,n){const i=e.source.body;let s=t,r=n,a=!1;if(r===45&&(r=i.charCodeAt(++s)),r===48){if(r=i.charCodeAt(++s),ye(r))throw D(e.source,s,`Invalid number, unexpected digit after 0: ${ne(e,s)}.`)}else s=Ce(e,s,r),r=i.charCodeAt(s);if(r===46&&(a=!0,r=i.charCodeAt(++s),s=Ce(e,s,r),r=i.charCodeAt(s)),(r===69||r===101)&&(a=!0,r=i.charCodeAt(++s),(r===43||r===45)&&(r=i.charCodeAt(++s)),s=Ce(e,s,r),r=i.charCodeAt(s)),r===46||Pe(r))throw D(e.source,s,`Invalid number, expected digit but got: ${ne(e,s)}.`);return w(e,a?o.FLOAT:o.INT,t,s,i.slice(t,s))}function Ce(e,t,n){if(!ye(n))throw D(e.source,t,`Invalid number, expected digit but got: ${ne(e,t)}.`);const i=e.source.body;let s=t+1;for(;ye(i.charCodeAt(s));)++s;return s}function en(e,t){const n=e.source.body,i=n.length;let s=t+1,r=s,a="";for(;s<i;){const u=n.charCodeAt(s);if(u===34)return a+=n.slice(r,s),w(e,o.STRING,t,s+1,a);if(u===92){a+=n.slice(r,s);const p=n.charCodeAt(s+1)===117?n.charCodeAt(s+2)===123?tn(e,s):nn(e,s):sn(e,s);a+=p.value,s+=p.size,r=s;continue}if(u===10||u===13)break;if(ue(u))++s;else if(we(n,s))s+=2;else throw D(e.source,s,`Invalid character within String: ${ne(e,s)}.`)}throw D(e.source,s,"Unterminated string.")}function tn(e,t){const n=e.source.body;let i=0,s=3;for(;s<12;){const r=n.charCodeAt(t+s++);if(r===125){if(s<5||!ue(i))break;return{value:String.fromCodePoint(i),size:s}}if(i=i<<4|he(r),i<0)break}throw D(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+s)}".`)}function nn(e,t){const n=e.source.body,i=He(n,t+2);if(ue(i))return{value:String.fromCodePoint(i),size:6};if(ut(i)&&n.charCodeAt(t+6)===92&&n.charCodeAt(t+7)===117){const s=He(n,t+8);if(pt(s))return{value:String.fromCodePoint(i,s),size:12}}throw D(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function He(e,t){return he(e.charCodeAt(t))<<12|he(e.charCodeAt(t+1))<<8|he(e.charCodeAt(t+2))<<4|he(e.charCodeAt(t+3))}function he(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function sn(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:`
`,size:2};case 114:return{value:"\r",size:2};case 116:return{value:"	",size:2}}throw D(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function rn(e,t){const n=e.source.body,i=n.length;let s=e.lineStart,r=t+3,a=r,u="";const p=[];for(;r<i;){const f=n.charCodeAt(r);if(f===34&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34){u+=n.slice(a,r),p.push(u);const h=w(e,o.BLOCK_STRING,t,r+3,qt(p).join(`
`));return e.line+=p.length-1,e.lineStart=s,h}if(f===92&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34&&n.charCodeAt(r+3)===34){u+=n.slice(a,r),a=r+1,r+=4;continue}if(f===10||f===13){u+=n.slice(a,r),p.push(u),f===13&&n.charCodeAt(r+1)===10?r+=2:++r,u="",a=r,s=r;continue}if(ue(f))++r;else if(we(n,r))r+=2;else throw D(e.source,r,`Invalid character within String: ${ne(e,r)}.`)}throw D(e.source,r,"Unterminated string.")}function on(e,t){const n=e.source.body,i=n.length;let s=t+1;for(;s<i;){const r=n.charCodeAt(s);if(lt(r))++s;else break}return w(e,o.NAME,t,s,n.slice(t,s))}const an=10,dt=2;function m(e){return Le(e,[])}function Le(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return cn(e,t);default:return String(e)}}function cn(e,t){if(e===null)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(ln(e)){const i=e.toJSON();if(i!==e)return typeof i=="string"?i:Le(i,n)}else if(Array.isArray(e))return pn(e,n);return un(e,n)}function ln(e){return typeof e.toJSON=="function"}function un(e,t){const n=Object.entries(e);return n.length===0?"{}":t.length>dt?"["+dn(e)+"]":"{ "+n.map(([s,r])=>s+": "+Le(r,t)).join(", ")+" }"}function pn(e,t){if(e.length===0)return"[]";if(t.length>dt)return"[Array]";const n=Math.min(an,e.length),i=e.length-n,s=[];for(let r=0;r<n;++r)s.push(Le(e[r],t));return i===1?s.push("... 1 more item"):i>1&&s.push(`... ${i} more items`),"["+s.join(", ")+"]"}function dn(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(t==="Object"&&typeof e.constructor=="function"){const n=e.constructor.name;if(typeof n=="string"&&n!=="")return n}return t}const H=function(t,n){return t instanceof n};class ht{constructor(t,n="GraphQL request",i={line:1,column:1}){typeof t=="string"||I(!1,`Body must be a string. Received: ${m(t)}.`),this.body=t,this.name=n,this.locationOffset=i,this.locationOffset.line>0||I(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||I(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function hn(e){return H(e,ht)}function fn(e,t){const n=new mn(e,t);n.expectToken(o.SOF);const i=n.parseValueLiteral(!1);return n.expectToken(o.EOF),i}class mn{constructor(t,n={}){const i=hn(t)?t:new ht(t);this._lexer=new Ht(i),this._options=n,this._tokenCounter=0}parseName(){const t=this.expectToken(o.NAME);return this.node(t,{kind:l.NAME,value:t.value})}parseDocument(){return this.node(this._lexer.token,{kind:l.DOCUMENT,definitions:this.many(o.SOF,this.parseDefinition,o.EOF)})}parseDefinition(){if(this.peek(o.BRACE_L))return this.parseOperationDefinition();const t=this.peekDescription(),n=t?this._lexer.lookahead():this._lexer.token;if(n.kind===o.NAME){switch(n.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(t)throw D(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(n.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(n)}parseOperationDefinition(){const t=this._lexer.token;if(this.peek(o.BRACE_L))return this.node(t,{kind:l.OPERATION_DEFINITION,operation:X.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const n=this.parseOperationType();let i;return this.peek(o.NAME)&&(i=this.parseName()),this.node(t,{kind:l.OPERATION_DEFINITION,operation:n,name:i,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const t=this.expectToken(o.NAME);switch(t.value){case"query":return X.QUERY;case"mutation":return X.MUTATION;case"subscription":return X.SUBSCRIPTION}throw this.unexpected(t)}parseVariableDefinitions(){return this.optionalMany(o.PAREN_L,this.parseVariableDefinition,o.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:l.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(o.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(o.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const t=this._lexer.token;return this.expectToken(o.DOLLAR),this.node(t,{kind:l.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:l.SELECTION_SET,selections:this.many(o.BRACE_L,this.parseSelection,o.BRACE_R)})}parseSelection(){return this.peek(o.SPREAD)?this.parseFragment():this.parseField()}parseField(){const t=this._lexer.token,n=this.parseName();let i,s;return this.expectOptionalToken(o.COLON)?(i=n,s=this.parseName()):s=n,this.node(t,{kind:l.FIELD,alias:i,name:s,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(o.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(t){const n=t?this.parseConstArgument:this.parseArgument;return this.optionalMany(o.PAREN_L,n,o.PAREN_R)}parseArgument(t=!1){const n=this._lexer.token,i=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:l.ARGUMENT,name:i,value:this.parseValueLiteral(t)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const t=this._lexer.token;this.expectToken(o.SPREAD);const n=this.expectOptionalKeyword("on");return!n&&this.peek(o.NAME)?this.node(t,{kind:l.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(t,{kind:l.INLINE_FRAGMENT,typeCondition:n?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const t=this._lexer.token;return this.expectKeyword("fragment"),this._options.allowLegacyFragmentVariables===!0?this.node(t,{kind:l.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(t,{kind:l.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if(this._lexer.token.value==="on")throw this.unexpected();return this.parseName()}parseValueLiteral(t){const n=this._lexer.token;switch(n.kind){case o.BRACKET_L:return this.parseList(t);case o.BRACE_L:return this.parseObject(t);case o.INT:return this.advanceLexer(),this.node(n,{kind:l.INT,value:n.value});case o.FLOAT:return this.advanceLexer(),this.node(n,{kind:l.FLOAT,value:n.value});case o.STRING:case o.BLOCK_STRING:return this.parseStringLiteral();case o.NAME:switch(this.advanceLexer(),n.value){case"true":return this.node(n,{kind:l.BOOLEAN,value:!0});case"false":return this.node(n,{kind:l.BOOLEAN,value:!1});case"null":return this.node(n,{kind:l.NULL});default:return this.node(n,{kind:l.ENUM,value:n.value})}case o.DOLLAR:if(t)if(this.expectToken(o.DOLLAR),this._lexer.token.kind===o.NAME){const i=this._lexer.token.value;throw D(this._lexer.source,n.start,`Unexpected variable "$${i}" in constant value.`)}else throw this.unexpected(n);return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const t=this._lexer.token;return this.advanceLexer(),this.node(t,{kind:l.STRING,value:t.value,block:t.kind===o.BLOCK_STRING})}parseList(t){const n=()=>this.parseValueLiteral(t);return this.node(this._lexer.token,{kind:l.LIST,values:this.any(o.BRACKET_L,n,o.BRACKET_R)})}parseObject(t){const n=()=>this.parseObjectField(t);return this.node(this._lexer.token,{kind:l.OBJECT,fields:this.any(o.BRACE_L,n,o.BRACE_R)})}parseObjectField(t){const n=this._lexer.token,i=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:l.OBJECT_FIELD,name:i,value:this.parseValueLiteral(t)})}parseDirectives(t){const n=[];for(;this.peek(o.AT);)n.push(this.parseDirective(t));return n}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(t){const n=this._lexer.token;return this.expectToken(o.AT),this.node(n,{kind:l.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(t)})}parseTypeReference(){const t=this._lexer.token;let n;if(this.expectOptionalToken(o.BRACKET_L)){const i=this.parseTypeReference();this.expectToken(o.BRACKET_R),n=this.node(t,{kind:l.LIST_TYPE,type:i})}else n=this.parseNamedType();return this.expectOptionalToken(o.BANG)?this.node(t,{kind:l.NON_NULL_TYPE,type:n}):n}parseNamedType(){return this.node(this._lexer.token,{kind:l.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(o.STRING)||this.peek(o.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("schema");const i=this.parseConstDirectives(),s=this.many(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);return this.node(t,{kind:l.SCHEMA_DEFINITION,description:n,directives:i,operationTypes:s})}parseOperationTypeDefinition(){const t=this._lexer.token,n=this.parseOperationType();this.expectToken(o.COLON);const i=this.parseNamedType();return this.node(t,{kind:l.OPERATION_TYPE_DEFINITION,operation:n,type:i})}parseScalarTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("scalar");const i=this.parseName(),s=this.parseConstDirectives();return this.node(t,{kind:l.SCALAR_TYPE_DEFINITION,description:n,name:i,directives:s})}parseObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("type");const i=this.parseName(),s=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:l.OBJECT_TYPE_DEFINITION,description:n,name:i,interfaces:s,directives:r,fields:a})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(o.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseFieldDefinition,o.BRACE_R)}parseFieldDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName(),s=this.parseArgumentDefs();this.expectToken(o.COLON);const r=this.parseTypeReference(),a=this.parseConstDirectives();return this.node(t,{kind:l.FIELD_DEFINITION,description:n,name:i,arguments:s,type:r,directives:a})}parseArgumentDefs(){return this.optionalMany(o.PAREN_L,this.parseInputValueDef,o.PAREN_R)}parseInputValueDef(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName();this.expectToken(o.COLON);const s=this.parseTypeReference();let r;this.expectOptionalToken(o.EQUALS)&&(r=this.parseConstValueLiteral());const a=this.parseConstDirectives();return this.node(t,{kind:l.INPUT_VALUE_DEFINITION,description:n,name:i,type:s,defaultValue:r,directives:a})}parseInterfaceTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("interface");const i=this.parseName(),s=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:l.INTERFACE_TYPE_DEFINITION,description:n,name:i,interfaces:s,directives:r,fields:a})}parseUnionTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("union");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseUnionMemberTypes();return this.node(t,{kind:l.UNION_TYPE_DEFINITION,description:n,name:i,directives:s,types:r})}parseUnionMemberTypes(){return this.expectOptionalToken(o.EQUALS)?this.delimitedMany(o.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("enum");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();return this.node(t,{kind:l.ENUM_TYPE_DEFINITION,description:n,name:i,directives:s,values:r})}parseEnumValuesDefinition(){return this.optionalMany(o.BRACE_L,this.parseEnumValueDefinition,o.BRACE_R)}parseEnumValueDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseEnumValueName(),s=this.parseConstDirectives();return this.node(t,{kind:l.ENUM_VALUE_DEFINITION,description:n,name:i,directives:s})}parseEnumValueName(){if(this._lexer.token.value==="true"||this._lexer.token.value==="false"||this._lexer.token.value==="null")throw D(this._lexer.source,this._lexer.token.start,`${Ie(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("input");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();return this.node(t,{kind:l.INPUT_OBJECT_TYPE_DEFINITION,description:n,name:i,directives:s,fields:r})}parseInputFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseInputValueDef,o.BRACE_R)}parseTypeSystemExtension(){const t=this._lexer.lookahead();if(t.kind===o.NAME)switch(t.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(t)}parseSchemaExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const n=this.parseConstDirectives(),i=this.optionalMany(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);if(n.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:l.SCHEMA_EXTENSION,directives:n,operationTypes:i})}parseScalarTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const n=this.parseName(),i=this.parseConstDirectives();if(i.length===0)throw this.unexpected();return this.node(t,{kind:l.SCALAR_TYPE_EXTENSION,name:n,directives:i})}parseObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const n=this.parseName(),i=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(i.length===0&&s.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:l.OBJECT_TYPE_EXTENSION,name:n,interfaces:i,directives:s,fields:r})}parseInterfaceTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const n=this.parseName(),i=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(i.length===0&&s.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:l.INTERFACE_TYPE_EXTENSION,name:n,interfaces:i,directives:s,fields:r})}parseUnionTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseUnionMemberTypes();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:l.UNION_TYPE_EXTENSION,name:n,directives:i,types:s})}parseEnumTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseEnumValuesDefinition();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:l.ENUM_TYPE_EXTENSION,name:n,directives:i,values:s})}parseInputObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseInputFieldsDefinition();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:l.INPUT_OBJECT_TYPE_EXTENSION,name:n,directives:i,fields:s})}parseDirectiveDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("directive"),this.expectToken(o.AT);const i=this.parseName(),s=this.parseArgumentDefs(),r=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const a=this.parseDirectiveLocations();return this.node(t,{kind:l.DIRECTIVE_DEFINITION,description:n,name:i,arguments:s,repeatable:r,locations:a})}parseDirectiveLocations(){return this.delimitedMany(o.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const t=this._lexer.token,n=this.parseName();if(Object.prototype.hasOwnProperty.call(_,n.value))return n;throw this.unexpected(t)}node(t,n){return this._options.noLocation!==!0&&(n.loc=new Qt(t,this._lexer.lastToken,this._lexer.source)),n}peek(t){return this._lexer.token.kind===t}expectToken(t){const n=this._lexer.token;if(n.kind===t)return this.advanceLexer(),n;throw D(this._lexer.source,n.start,`Expected ${ft(t)}, found ${Ie(n)}.`)}expectOptionalToken(t){return this._lexer.token.kind===t?(this.advanceLexer(),!0):!1}expectKeyword(t){const n=this._lexer.token;if(n.kind===o.NAME&&n.value===t)this.advanceLexer();else throw D(this._lexer.source,n.start,`Expected "${t}", found ${Ie(n)}.`)}expectOptionalKeyword(t){const n=this._lexer.token;return n.kind===o.NAME&&n.value===t?(this.advanceLexer(),!0):!1}unexpected(t){const n=t??this._lexer.token;return D(this._lexer.source,n.start,`Unexpected ${Ie(n)}.`)}any(t,n,i){this.expectToken(t);const s=[];for(;!this.expectOptionalToken(i);)s.push(n.call(this));return s}optionalMany(t,n,i){if(this.expectOptionalToken(t)){const s=[];do s.push(n.call(this));while(!this.expectOptionalToken(i));return s}return[]}many(t,n,i){this.expectToken(t);const s=[];do s.push(n.call(this));while(!this.expectOptionalToken(i));return s}delimitedMany(t,n){this.expectOptionalToken(t);const i=[];do i.push(n.call(this));while(this.expectOptionalToken(t));return i}advanceLexer(){const{maxTokens:t}=this._options,n=this._lexer.advance();if(t!==void 0&&n.kind!==o.EOF&&(++this._tokenCounter,this._tokenCounter>t))throw D(this._lexer.source,n.start,`Document contains more that ${t} tokens. Parsing aborted.`)}}function Ie(e){const t=e.value;return ft(e.kind)+(t!=null?` "${t}"`:"")}function ft(e){return Xt(e)?`"${e}"`:e}const yn=5;function Tn(e,t){const[n,i]=t?[e,t]:[void 0,e];let s=" Did you mean ";n&&(s+=n+" ");const r=i.map(p=>`"${p}"`);switch(r.length){case 0:return"";case 1:return s+r[0]+"?";case 2:return s+r[0]+" or "+r[1]+"?"}const a=r.slice(0,yn),u=a.pop();return s+a.join(", ")+", or "+u+"?"}function Xe(e){return e}function mt(e,t){const n=Object.create(null);for(const i of e)n[t(i)]=i;return n}function te(e,t,n){const i=Object.create(null);for(const s of e)i[t(s)]=n(s);return i}function De(e,t){const n=Object.create(null);for(const i of Object.keys(e))n[i]=t(e[i],i);return n}function Nn(e,t){let n=0,i=0;for(;n<e.length&&i<t.length;){let s=e.charCodeAt(n),r=t.charCodeAt(i);if(ge(s)&&ge(r)){let a=0;do++n,a=a*10+s-Be,s=e.charCodeAt(n);while(ge(s)&&a>0);let u=0;do++i,u=u*10+r-Be,r=t.charCodeAt(i);while(ge(r)&&u>0);if(a<u)return-1;if(a>u)return 1}else{if(s<r)return-1;if(s>r)return 1;++n,++i}}return e.length-t.length}const Be=48,En=57;function ge(e){return!isNaN(e)&&Be<=e&&e<=En}function vn(e,t){const n=Object.create(null),i=new _n(e),s=Math.floor(e.length*.4)+1;for(const r of t){const a=i.measure(r,s);a!==void 0&&(n[r]=a)}return Object.keys(n).sort((r,a)=>{const u=n[r]-n[a];return u!==0?u:Nn(r,a)})}class _n{constructor(t){this._input=t,this._inputLowerCase=t.toLowerCase(),this._inputArray=We(this._inputLowerCase),this._rows=[new Array(t.length+1).fill(0),new Array(t.length+1).fill(0),new Array(t.length+1).fill(0)]}measure(t,n){if(this._input===t)return 0;const i=t.toLowerCase();if(this._inputLowerCase===i)return 1;let s=We(i),r=this._inputArray;if(s.length<r.length){const h=s;s=r,r=h}const a=s.length,u=r.length;if(a-u>n)return;const p=this._rows;for(let h=0;h<=u;h++)p[0][h]=h;for(let h=1;h<=a;h++){const A=p[(h-1)%3],x=p[h%3];let k=x[0]=h;for(let v=1;v<=u;v++){const C=s[h-1]===r[v-1]?0:1;let B=Math.min(A[v]+1,x[v-1]+1,A[v-1]+C);if(h>1&&v>1&&s[h-1]===r[v-2]&&s[h-2]===r[v-1]){const F=p[(h-2)%3][v-2];B=Math.min(B,F+1)}B<k&&(k=B),x[v]=B}if(k>n)return}const f=p[a%3][u];return f<=n?f:void 0}}function We(e){const t=e.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=e.charCodeAt(i);return n}function j(e){if(e==null)return Object.create(null);if(Object.getPrototypeOf(e)===null)return e;const t=Object.create(null);for(const[n,i]of Object.entries(e))t[n]=i;return t}function In(e){return`"${e.replace(gn,xn)}"`}const gn=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function xn(e){return An[e.charCodeAt(0)]}const An=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],bn=Object.freeze({});function On(e,t,n=at){const i=new Map;for(const F of Object.values(l))i.set(F,Sn(t,F));let s,r=Array.isArray(e),a=[e],u=-1,p=[],f=e,h,A;const x=[],k=[];do{u++;const F=u===a.length,ve=F&&p.length!==0;if(F){if(h=k.length===0?void 0:x[x.length-1],f=A,A=k.pop(),ve)if(r){f=f.slice();let V=0;for(const[de,ae]of p){const _e=de-V;ae===null?(f.splice(_e,1),V++):f[_e]=ae}}else{f=Object.defineProperties({},Object.getOwnPropertyDescriptors(f));for(const[V,de]of p)f[V]=de}u=s.index,a=s.keys,p=s.edits,r=s.inArray,s=s.prev}else if(A){if(h=r?u:a[u],f=A[h],f==null)continue;x.push(h)}let q;if(!Array.isArray(f)){var v,C;ze(f)||I(!1,`Invalid AST Node: ${m(f)}.`);const V=F?(v=i.get(f.kind))===null||v===void 0?void 0:v.leave:(C=i.get(f.kind))===null||C===void 0?void 0:C.enter;if(q=V==null?void 0:V.call(t,f,h,A,x,k),q===bn)break;if(q===!1){if(!F){x.pop();continue}}else if(q!==void 0&&(p.push([h,q]),!F))if(ze(q))f=q;else{x.pop();continue}}if(q===void 0&&ve&&p.push([h,f]),F)x.pop();else{var B;s={inArray:r,index:u,keys:a,edits:p,prev:s},r=Array.isArray(f),a=r?f:(B=n[f.kind])!==null&&B!==void 0?B:[],u=-1,p=[],A&&k.push(A),A=f}}while(s!==void 0);return p.length!==0?p[p.length-1][1]:e}function Sn(e,t){const n=e[t];return typeof n=="object"?n:typeof n=="function"?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function ee(e){return On(e,Ln)}const wn=80,Ln={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>d(e.definitions,`

`)},OperationDefinition:{leave(e){const t=N("(",d(e.variableDefinitions,", "),")"),n=d([e.operation,d([e.name,t]),d(e.directives," ")]," ");return(n==="query"?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:i})=>e+": "+t+N(" = ",n)+N(" ",d(i," "))},SelectionSet:{leave:({selections:e})=>$(e)},Field:{leave({alias:e,name:t,arguments:n,directives:i,selectionSet:s}){const r=N("",e,": ")+t;let a=r+N("(",d(n,", "),")");return a.length>wn&&(a=r+N(`(
`,be(d(n,`
`)),`
)`)),d([a,d(i," "),s]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+N(" ",d(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>d(["...",N("on ",e),d(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:i,selectionSet:s})=>`fragment ${e}${N("(",d(n,", "),")")} on ${t} ${N("",d(i," ")," ")}`+s},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?zt(e):In(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+d(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+d(e,", ")+"}"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+N("(",d(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>N("",e,`
`)+d(["schema",d(t," "),$(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>N("",e,`
`)+d(["scalar",t,d(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:s})=>N("",e,`
`)+d(["type",t,N("implements ",d(n," & ")),d(i," "),$(s)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:i,directives:s})=>N("",e,`
`)+t+(Ze(n)?N(`(
`,be(d(n,`
`)),`
)`):N("(",d(n,", "),")"))+": "+i+N(" ",d(s," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:i,directives:s})=>N("",e,`
`)+d([t+": "+n,N("= ",i),d(s," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:s})=>N("",e,`
`)+d(["interface",t,N("implements ",d(n," & ")),d(i," "),$(s)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:i})=>N("",e,`
`)+d(["union",t,d(n," "),N("= ",d(i," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:i})=>N("",e,`
`)+d(["enum",t,d(n," "),$(i)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>N("",e,`
`)+d([t,d(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:i})=>N("",e,`
`)+d(["input",t,d(n," "),$(i)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:i,locations:s})=>N("",e,`
`)+"directive @"+t+(Ze(n)?N(`(
`,be(d(n,`
`)),`
)`):N("(",d(n,", "),")"))+(i?" repeatable":"")+" on "+d(s," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>d(["extend schema",d(e," "),$(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>d(["extend scalar",e,d(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>d(["extend type",e,N("implements ",d(t," & ")),d(n," "),$(i)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>d(["extend interface",e,N("implements ",d(t," & ")),d(n," "),$(i)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>d(["extend union",e,d(t," "),N("= ",d(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>d(["extend enum",e,d(t," "),$(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>d(["extend input",e,d(t," "),$(n)]," ")}};function d(e,t=""){var n;return(n=e==null?void 0:e.filter(i=>i).join(t))!==null&&n!==void 0?n:""}function $(e){return N(`{
`,be(d(e,`
`)),`
}`)}function N(e,t,n=""){return t!=null&&t!==""?e+t+n:""}function be(e){return N("  ",e.replace(/\n/g,`
  `))}function Ze(e){var t;return(t=e==null?void 0:e.some(n=>n.includes(`
`)))!==null&&t!==void 0?t:!1}function Ve(e,t){switch(e.kind){case l.NULL:return null;case l.INT:return parseInt(e.value,10);case l.FLOAT:return parseFloat(e.value);case l.STRING:case l.ENUM:case l.BOOLEAN:return e.value;case l.LIST:return e.values.map(n=>Ve(n,t));case l.OBJECT:return te(e.fields,n=>n.name.value,n=>Ve(n.value,t));case l.VARIABLE:return t==null?void 0:t[e.name.value]}}function J(e){if(e!=null||I(!1,"Must provide name."),typeof e=="string"||I(!1,"Expected name to be a string."),e.length===0)throw new g("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!lt(e.charCodeAt(t)))throw new g(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!Pe(e.charCodeAt(0)))throw new g(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Dn(e){if(e==="true"||e==="false"||e==="null")throw new g(`Enum values cannot be named: ${e}`);return J(e)}function yt(e){return Te(e)||K(e)||Q(e)||ie(e)||se(e)||re(e)||Ne(e)||W(e)}function Te(e){return H(e,oe)}function K(e){return H(e,z)}function kn(e){if(!K(e))throw new Error(`Expected ${m(e)} to be a GraphQL Object type.`);return e}function Q(e){return H(e,St)}function Rn(e){if(!Q(e))throw new Error(`Expected ${m(e)} to be a GraphQL Interface type.`);return e}function ie(e){return H(e,wt)}function se(e){return H(e,ke)}function re(e){return H(e,Qe)}function Ne(e){return H(e,U)}function W(e){return H(e,E)}function Tt(e){return Te(e)||se(e)||re(e)||Ge(e)&&Tt(e.ofType)}function Nt(e){return Te(e)||K(e)||Q(e)||ie(e)||se(e)||Ge(e)&&Nt(e.ofType)}function Et(e){return Te(e)||se(e)}function Cn(e){return Q(e)||ie(e)}class U{constructor(t){yt(t)||I(!1,`Expected ${m(t)} to be a GraphQL type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class E{constructor(t){vt(t)||I(!1,`Expected ${m(t)} to be a GraphQL nullable type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Ge(e){return Ne(e)||W(e)}function vt(e){return yt(e)&&!W(e)}function Fn(e){if(!vt(e))throw new Error(`Expected ${m(e)} to be a GraphQL nullable type.`);return e}function Un(e){if(e){let t=e;for(;Ge(t);)t=t.ofType;return t}}function _t(e){return typeof e=="function"?e():e}function It(e){return typeof e=="function"?e():e}class oe{constructor(t){var n,i,s,r;const a=(n=t.parseValue)!==null&&n!==void 0?n:Xe;this.name=J(t.name),this.description=t.description,this.specifiedByURL=t.specifiedByURL,this.serialize=(i=t.serialize)!==null&&i!==void 0?i:Xe,this.parseValue=a,this.parseLiteral=(s=t.parseLiteral)!==null&&s!==void 0?s:(u,p)=>a(Ve(u,p)),this.extensions=j(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(r=t.extensionASTNodes)!==null&&r!==void 0?r:[],t.specifiedByURL==null||typeof t.specifiedByURL=="string"||I(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${m(t.specifiedByURL)}.`),t.serialize==null||typeof t.serialize=="function"||I(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),t.parseLiteral&&(typeof t.parseValue=="function"&&typeof t.parseLiteral=="function"||I(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class z{constructor(t){var n;this.name=J(t.name),this.description=t.description,this.isTypeOf=t.isTypeOf,this.extensions=j(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=()=>xt(t),this._interfaces=()=>gt(t),t.isTypeOf==null||typeof t.isTypeOf=="function"||I(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${m(t.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:bt(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function gt(e){var t;const n=_t((t=e.interfaces)!==null&&t!==void 0?t:[]);return Array.isArray(n)||I(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),n}function xt(e){const t=It(e.fields);return ce(t)||I(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),De(t,(n,i)=>{var s;ce(n)||I(!1,`${e.name}.${i} field config must be an object.`),n.resolve==null||typeof n.resolve=="function"||I(!1,`${e.name}.${i} field resolver must be a function if provided, but got: ${m(n.resolve)}.`);const r=(s=n.args)!==null&&s!==void 0?s:{};return ce(r)||I(!1,`${e.name}.${i} args must be an object with argument names as keys.`),{name:J(i),description:n.description,type:n.type,args:At(r),resolve:n.resolve,subscribe:n.subscribe,deprecationReason:n.deprecationReason,extensions:j(n.extensions),astNode:n.astNode}})}function At(e){return Object.entries(e).map(([t,n])=>({name:J(t),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:j(n.extensions),astNode:n.astNode}))}function ce(e){return Z(e)&&!Array.isArray(e)}function bt(e){return De(e,t=>({description:t.description,type:t.type,args:Ot(t.args),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function Ot(e){return te(e,t=>t.name,t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}class St{constructor(t){var n;this.name=J(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=j(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=xt.bind(void 0,t),this._interfaces=gt.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||I(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:bt(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class wt{constructor(t){var n;this.name=J(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=j(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._types=Mn.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||I(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return typeof this._types=="function"&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Mn(e){const t=_t(e.types);return Array.isArray(t)||I(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class ke{constructor(t){var n;this.name=J(t.name),this.description=t.description,this.extensions=j(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._values=jn(this.name,t.values),this._valueLookup=new Map(this._values.map(i=>[i.value,i])),this._nameLookup=mt(this._values,i=>i.name)}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(t){return this._nameLookup[t]}serialize(t){const n=this._valueLookup.get(t);if(n===void 0)throw new g(`Enum "${this.name}" cannot represent value: ${m(t)}`);return n.name}parseValue(t){if(typeof t!="string"){const i=m(t);throw new g(`Enum "${this.name}" cannot represent non-string value: ${i}.`+xe(this,i))}const n=this.getValue(t);if(n==null)throw new g(`Value "${t}" does not exist in "${this.name}" enum.`+xe(this,t));return n.value}parseLiteral(t,n){if(t.kind!==l.ENUM){const s=ee(t);throw new g(`Enum "${this.name}" cannot represent non-enum value: ${s}.`+xe(this,s),{nodes:t})}const i=this.getValue(t.value);if(i==null){const s=ee(t);throw new g(`Value "${s}" does not exist in "${this.name}" enum.`+xe(this,s),{nodes:t})}return i.value}toConfig(){const t=te(this.getValues(),n=>n.name,n=>({description:n.description,value:n.value,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,values:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function xe(e,t){const n=e.getValues().map(s=>s.name),i=vn(t,n);return Tn("the enum value",i)}function jn(e,t){return ce(t)||I(!1,`${e} values must be an object with value names as keys.`),Object.entries(t).map(([n,i])=>(ce(i)||I(!1,`${e}.${n} must refer to an object with a "value" key representing an internal value but got: ${m(i)}.`),{name:Dn(n),description:i.description,value:i.value!==void 0?i.value:n,deprecationReason:i.deprecationReason,extensions:j(i.extensions),astNode:i.astNode}))}class Qe{constructor(t){var n;this.name=J(t.name),this.description=t.description,this.extensions=j(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=Bn.bind(void 0,t)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}toConfig(){const t=De(this.getFields(),n=>({description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,fields:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Bn(e){const t=It(e.fields);return ce(t)||I(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),De(t,(n,i)=>(!("resolve"in n)||I(!1,`${e.name}.${i} field has a resolve property, but Input Types cannot define resolvers.`),{name:J(i),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:j(n.extensions),astNode:n.astNode}))}const Fe=2147483647,Ue=-2147483648,Vn=new oe({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=Ee(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isInteger(n))throw new g(`Int cannot represent non-integer value: ${m(t)}`);if(n>Fe||n<Ue)throw new g("Int cannot represent non 32-bit signed integer value: "+m(t));return n},parseValue(e){if(typeof e!="number"||!Number.isInteger(e))throw new g(`Int cannot represent non-integer value: ${m(e)}`);if(e>Fe||e<Ue)throw new g(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==l.INT)throw new g(`Int cannot represent non-integer value: ${ee(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>Fe||t<Ue)throw new g(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}}),$n=new oe({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=Ee(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isFinite(n))throw new g(`Float cannot represent non numeric value: ${m(t)}`);return n},parseValue(e){if(typeof e!="number"||!Number.isFinite(e))throw new g(`Float cannot represent non numeric value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==l.FLOAT&&e.kind!==l.INT)throw new g(`Float cannot represent non numeric value: ${ee(e)}`,e);return parseFloat(e.value)}}),S=new oe({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=Ee(e);if(typeof t=="string")return t;if(typeof t=="boolean")return t?"true":"false";if(typeof t=="number"&&Number.isFinite(t))return t.toString();throw new g(`String cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e!="string")throw new g(`String cannot represent a non string value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==l.STRING)throw new g(`String cannot represent a non string value: ${ee(e)}`,{nodes:e});return e.value}}),M=new oe({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=Ee(e);if(typeof t=="boolean")return t;if(Number.isFinite(t))return t!==0;throw new g(`Boolean cannot represent a non boolean value: ${m(t)}`)},parseValue(e){if(typeof e!="boolean")throw new g(`Boolean cannot represent a non boolean value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==l.BOOLEAN)throw new g(`Boolean cannot represent a non boolean value: ${ee(e)}`,{nodes:e});return e.value}}),Lt=new oe({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=Ee(e);if(typeof t=="string")return t;if(Number.isInteger(t))return String(t);throw new g(`ID cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e=="string")return e;if(typeof e=="number"&&Number.isInteger(e))return e.toString();throw new g(`ID cannot represent value: ${m(e)}`)},parseLiteral(e){if(e.kind!==l.STRING&&e.kind!==l.INT)throw new g("ID cannot represent a non-string and non-integer value: "+ee(e),{nodes:e});return e.value}}),Pn=Object.freeze([S,Vn,$n,M,Lt]);function Ee(e){if(Z(e)){if(typeof e.valueOf=="function"){const t=e.valueOf();if(!Z(t))return t}if(typeof e.toJSON=="function")return e.toJSON()}return e}function Gn(e){return H(e,pe)}class pe{constructor(t){var n,i;this.name=J(t.name),this.description=t.description,this.locations=t.locations,this.isRepeatable=(n=t.isRepeatable)!==null&&n!==void 0?n:!1,this.extensions=j(t.extensions),this.astNode=t.astNode,Array.isArray(t.locations)||I(!1,`@${t.name} locations must be an Array.`);const s=(i=t.args)!==null&&i!==void 0?i:{};Z(s)&&!Array.isArray(s)||I(!1,`@${t.name} args must be an object with argument names as keys.`),this.args=At(s)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:Ot(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const Qn=new pe({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[_.FIELD,_.FRAGMENT_SPREAD,_.INLINE_FRAGMENT],args:{if:{type:new E(M),description:"Included when true."}}}),Jn=new pe({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[_.FIELD,_.FRAGMENT_SPREAD,_.INLINE_FRAGMENT],args:{if:{type:new E(M),description:"Skipped when true."}}}),qn="No longer supported",Yn=new pe({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[_.FIELD_DEFINITION,_.ARGUMENT_DEFINITION,_.INPUT_FIELD_DEFINITION,_.ENUM_VALUE],args:{reason:{type:S,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:qn}}}),zn=new pe({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[_.SCALAR],args:{url:{type:new E(S),description:"The URL that specifies the behavior of this scalar."}}}),Hn=Object.freeze([Qn,Jn,Yn,zn]);function Xn(e){return typeof e=="object"&&typeof(e==null?void 0:e[Symbol.iterator])=="function"}function fe(e,t){if(W(t)){const n=fe(e,t.ofType);return(n==null?void 0:n.kind)===l.NULL?null:n}if(e===null)return{kind:l.NULL};if(e===void 0)return null;if(Ne(t)){const n=t.ofType;if(Xn(e)){const i=[];for(const s of e){const r=fe(s,n);r!=null&&i.push(r)}return{kind:l.LIST,values:i}}return fe(e,n)}if(re(t)){if(!Z(e))return null;const n=[];for(const i of Object.values(t.getFields())){const s=fe(e[i.name],i.type);s&&n.push({kind:l.OBJECT_FIELD,name:{kind:l.NAME,value:i.name},value:s})}return{kind:l.OBJECT,fields:n}}if(Et(t)){const n=t.serialize(e);if(n==null)return null;if(typeof n=="boolean")return{kind:l.BOOLEAN,value:n};if(typeof n=="number"&&Number.isFinite(n)){const i=String(n);return Ke.test(i)?{kind:l.INT,value:i}:{kind:l.FLOAT,value:i}}if(typeof n=="string")return se(t)?{kind:l.ENUM,value:n}:t===Lt&&Ke.test(n)?{kind:l.INT,value:n}:{kind:l.STRING,value:n};throw new TypeError(`Cannot convert value to AST: ${m(n)}.`)}Se(!1,"Unexpected input type: "+m(t))}const Ke=/^-?(?:0|[1-9][0-9]*)$/,Je=new z({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:S,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new E(new U(new E(G))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new E(G),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:G,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:G,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new E(new U(new E(Dt))),resolve:e=>e.getDirectives()}})}),Dt=new z({name:"__Directive",description:`A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.`,fields:()=>({name:{type:new E(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},isRepeatable:{type:new E(M),resolve:e=>e.isRepeatable},locations:{type:new E(new U(new E(kt))),resolve:e=>e.locations},args:{type:new E(new U(new E(Re))),args:{includeDeprecated:{type:M,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}}})}),kt=new ke({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:_.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:_.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:_.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:_.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:_.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:_.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:_.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:_.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:_.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:_.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:_.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:_.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:_.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:_.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:_.UNION,description:"Location adjacent to a union definition."},ENUM:{value:_.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:_.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:_.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:_.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),G=new z({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new E(Ft),resolve(e){if(Te(e))return b.SCALAR;if(K(e))return b.OBJECT;if(Q(e))return b.INTERFACE;if(ie(e))return b.UNION;if(se(e))return b.ENUM;if(re(e))return b.INPUT_OBJECT;if(Ne(e))return b.LIST;if(W(e))return b.NON_NULL;Se(!1,`Unexpected type: "${m(e)}".`)}},name:{type:S,resolve:e=>"name"in e?e.name:void 0},description:{type:S,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:S,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new U(new E(Rt)),args:{includeDeprecated:{type:M,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(K(e)||Q(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>i.deprecationReason==null)}}},interfaces:{type:new U(new E(G)),resolve(e){if(K(e)||Q(e))return e.getInterfaces()}},possibleTypes:{type:new U(new E(G)),resolve(e,t,n,{schema:i}){if(Cn(e))return i.getPossibleTypes(e)}},enumValues:{type:new U(new E(Ct)),args:{includeDeprecated:{type:M,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(se(e)){const n=e.getValues();return t?n:n.filter(i=>i.deprecationReason==null)}}},inputFields:{type:new U(new E(Re)),args:{includeDeprecated:{type:M,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(re(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>i.deprecationReason==null)}}},ofType:{type:G,resolve:e=>"ofType"in e?e.ofType:void 0}})}),Rt=new z({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new E(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},args:{type:new E(new U(new E(Re))),args:{includeDeprecated:{type:M,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}},type:{type:new E(G),resolve:e=>e.type},isDeprecated:{type:new E(M),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:S,resolve:e=>e.deprecationReason}})}),Re=new z({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new E(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},type:{type:new E(G),resolve:e=>e.type},defaultValue:{type:S,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,i=fe(n,t);return i?ee(i):null}},isDeprecated:{type:new E(M),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:S,resolve:e=>e.deprecationReason}})}),Ct=new z({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new E(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},isDeprecated:{type:new E(M),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:S,resolve:e=>e.deprecationReason}})});var b;(function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"})(b||(b={}));const Ft=new ke({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:b.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:b.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:b.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:b.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:b.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:b.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:b.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:b.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}});new E(Je);new E(S);new E(S);const Wn=Object.freeze([Je,Dt,kt,G,Rt,Re,Ct,Ft]);class Zn{constructor(t){var n,i;this.__validationErrors=t.assumeValid===!0?[]:void 0,Z(t)||I(!1,"Must provide configuration object."),!t.types||Array.isArray(t.types)||I(!1,`"types" must be Array if provided but got: ${m(t.types)}.`),!t.directives||Array.isArray(t.directives)||I(!1,`"directives" must be Array if provided but got: ${m(t.directives)}.`),this.description=t.description,this.extensions=j(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._queryType=t.query,this._mutationType=t.mutation,this._subscriptionType=t.subscription,this._directives=(i=t.directives)!==null&&i!==void 0?i:Hn;const s=new Set(t.types);if(t.types!=null)for(const r of t.types)s.delete(r),P(r,s);this._queryType!=null&&P(this._queryType,s),this._mutationType!=null&&P(this._mutationType,s),this._subscriptionType!=null&&P(this._subscriptionType,s);for(const r of this._directives)if(Gn(r))for(const a of r.args)P(a.type,s);P(Je,s),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const r of s){if(r==null)continue;const a=r.name;if(a||I(!1,"One of the provided types for building the Schema is missing a name."),this._typeMap[a]!==void 0)throw new Error(`Schema must contain uniquely named types but contains multiple types named "${a}".`);if(this._typeMap[a]=r,Q(r)){for(const u of r.getInterfaces())if(Q(u)){let p=this._implementationsMap[u.name];p===void 0&&(p=this._implementationsMap[u.name]={objects:[],interfaces:[]}),p.interfaces.push(r)}}else if(K(r)){for(const u of r.getInterfaces())if(Q(u)){let p=this._implementationsMap[u.name];p===void 0&&(p=this._implementationsMap[u.name]={objects:[],interfaces:[]}),p.objects.push(r)}}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(t){switch(t){case X.QUERY:return this.getQueryType();case X.MUTATION:return this.getMutationType();case X.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(t){return this.getTypeMap()[t]}getPossibleTypes(t){return ie(t)?t.getTypes():this.getImplementations(t).objects}getImplementations(t){const n=this._implementationsMap[t.name];return n??{objects:[],interfaces:[]}}isSubType(t,n){let i=this._subTypeMap[t.name];if(i===void 0){if(i=Object.create(null),ie(t))for(const s of t.getTypes())i[s.name]=!0;else{const s=this.getImplementations(t);for(const r of s.objects)i[r.name]=!0;for(const r of s.interfaces)i[r.name]=!0}this._subTypeMap[t.name]=i}return i[n.name]!==void 0}getDirectives(){return this._directives}getDirective(t){return this.getDirectives().find(n=>n.name===t)}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.__validationErrors!==void 0}}}function P(e,t){const n=Un(e);if(!t.has(n)){if(t.add(n),ie(n))for(const i of n.getTypes())P(i,t);else if(K(n)||Q(n)){for(const i of n.getInterfaces())P(i,t);for(const i of Object.values(n.getFields())){P(i.type,t);for(const s of i.args)P(s.type,t)}}else if(re(n))for(const i of Object.values(n.getFields()))P(i.type,t)}return t}function me(e,t,n){if(e){if(e.kind===l.VARIABLE){const i=e.name.value;if(n==null||n[i]===void 0)return;const s=n[i];return s===null&&W(t)?void 0:s}if(W(t))return e.kind===l.NULL?void 0:me(e,t.ofType,n);if(e.kind===l.NULL)return null;if(Ne(t)){const i=t.ofType;if(e.kind===l.LIST){const r=[];for(const a of e.values)if(et(a,n)){if(W(i))return;r.push(null)}else{const u=me(a,i,n);if(u===void 0)return;r.push(u)}return r}const s=me(e,i,n);return s===void 0?void 0:[s]}if(re(t)){if(e.kind!==l.OBJECT)return;const i=Object.create(null),s=mt(e.fields,r=>r.name.value);for(const r of Object.values(t.getFields())){const a=s[r.name];if(!a||et(a.value,n)){if(r.defaultValue!==void 0)i[r.name]=r.defaultValue;else if(W(r.type))return;continue}const u=me(a.value,r.type,n);if(u===void 0)return;i[r.name]=u}return i}if(Et(t)){let i;try{i=t.parseLiteral(e,n)}catch{return}return i===void 0?void 0:i}Se(!1,"Unexpected input type: "+m(t))}}function et(e,t){return e.kind===l.VARIABLE&&(t==null||t[e.name.value]===void 0)}function Kn(e,t){Z(e)&&Z(e.__schema)||I(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${m(e)}.`);const n=e.__schema,i=te(n.types,c=>c.name,c=>x(c));for(const c of[...Pn,...Wn])i[c.name]&&(i[c.name]=c);const s=n.queryType?h(n.queryType):null,r=n.mutationType?h(n.mutationType):null,a=n.subscriptionType?h(n.subscriptionType):null,u=n.directives?n.directives.map(Mt):[];return new Zn({description:n.description,query:s,mutation:r,subscription:a,types:Object.values(i),directives:u,assumeValid:t==null?void 0:t.assumeValid});function p(c){if(c.kind===b.LIST){const T=c.ofType;if(!T)throw new Error("Decorated type deeper than introspection query.");return new U(p(T))}if(c.kind===b.NON_NULL){const T=c.ofType;if(!T)throw new Error("Decorated type deeper than introspection query.");const Y=p(T);return new E(Fn(Y))}return f(c)}function f(c){const T=c.name;if(!T)throw new Error(`Unknown type reference: ${m(c)}.`);const Y=i[T];if(!Y)throw new Error(`Invalid or incomplete schema, unknown type: ${T}. Ensure that a full introspection query is used in order to build a client schema.`);return Y}function h(c){return kn(f(c))}function A(c){return Rn(f(c))}function x(c){if(c!=null&&c.name!=null&&c.kind!=null)switch(c.kind){case b.SCALAR:return k(c);case b.OBJECT:return C(c);case b.INTERFACE:return B(c);case b.UNION:return F(c);case b.ENUM:return ve(c);case b.INPUT_OBJECT:return q(c)}const T=m(c);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${T}.`)}function k(c){return new oe({name:c.name,description:c.description,specifiedByURL:c.specifiedByURL})}function v(c){if(c.interfaces===null&&c.kind===b.INTERFACE)return[];if(!c.interfaces){const T=m(c);throw new Error(`Introspection result missing interfaces: ${T}.`)}return c.interfaces.map(A)}function C(c){return new z({name:c.name,description:c.description,interfaces:()=>v(c),fields:()=>V(c)})}function B(c){return new St({name:c.name,description:c.description,interfaces:()=>v(c),fields:()=>V(c)})}function F(c){if(!c.possibleTypes){const T=m(c);throw new Error(`Introspection result missing possibleTypes: ${T}.`)}return new wt({name:c.name,description:c.description,types:()=>c.possibleTypes.map(h)})}function ve(c){if(!c.enumValues){const T=m(c);throw new Error(`Introspection result missing enumValues: ${T}.`)}return new ke({name:c.name,description:c.description,values:te(c.enumValues,T=>T.name,T=>({description:T.description,deprecationReason:T.deprecationReason}))})}function q(c){if(!c.inputFields){const T=m(c);throw new Error(`Introspection result missing inputFields: ${T}.`)}return new Qe({name:c.name,description:c.description,fields:()=>ae(c.inputFields)})}function V(c){if(!c.fields)throw new Error(`Introspection result missing fields: ${m(c)}.`);return te(c.fields,T=>T.name,de)}function de(c){const T=p(c.type);if(!Nt(T)){const Y=m(T);throw new Error(`Introspection must provide output type for fields, but received: ${Y}.`)}if(!c.args){const Y=m(c);throw new Error(`Introspection result missing field args: ${Y}.`)}return{description:c.description,deprecationReason:c.deprecationReason,type:T,args:ae(c.args)}}function ae(c){return te(c,T=>T.name,_e)}function _e(c){const T=p(c.type);if(!Tt(T)){const jt=m(T);throw new Error(`Introspection must provide input type for arguments, but received: ${jt}.`)}const Y=c.defaultValue!=null?me(fn(c.defaultValue),T):void 0;return{description:c.description,type:T,defaultValue:Y,deprecationReason:c.deprecationReason}}function Mt(c){if(!c.args){const T=m(c);throw new Error(`Introspection result missing directive args: ${T}.`)}if(!c.locations){const T=m(c);throw new Error(`Introspection result missing directive locations: ${T}.`)}return new pe({name:c.name,description:c.description,isRepeatable:c.isRepeatable,locations:c.locations.slice(),args:ae(c.args)})}}const ei="_schema_b3o9b_1",ti="_schema-heading_b3o9b_17",ni="_name_b3o9b_26",ii="_scalar-description_b3o9b_31",si="_title_b3o9b_38",O={schema:ei,"schema-heading":"_schema-heading_b3o9b_17",schemaHeading:ti,name:ni,"scalar-description":"_scalar-description_b3o9b_31",scalarDescription:ii,title:si},tt=e=>R.createElement("svg",{height:"1em",viewBox:"0 0 13 13",fill:"none",xmlns:"http://www.w3.org/2000/svg",...e},R.createElement("title",null,"type icon"),R.createElement("rect",{x:.6,y:.6,width:11.8,height:11.8,rx:5.9,stroke:"currentColor",strokeWidth:1.2}),R.createElement("rect",{x:5.5,y:5.5,width:2,height:2,rx:1,fill:"currentColor"})),ri=e=>R.createElement("svg",{height:"1em",viewBox:"0 0 14 14",fill:"none",xmlns:"http://www.w3.org/2000/svg",...e},R.createElement("title",null,"argument icon"),R.createElement("path",{d:"M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z",stroke:"currentColor",strokeWidth:1.2}),R.createElement("rect",{x:6,y:6,width:2,height:2,rx:1,fill:"currentColor"})),oi=e=>R.createElement("svg",{height:"1em",viewBox:"0 0 12 13",fill:"none",xmlns:"http://www.w3.org/2000/svg",...e},R.createElement("title",null,"field icon"),R.createElement("rect",{x:.6,y:1.1,width:10.8,height:10.8,rx:2.4,stroke:"currentColor",strokeWidth:1.2}),R.createElement("rect",{x:5,y:5.5,width:2,height:2,rx:1,fill:"currentColor"})),ai="_type_1keth_1",ci={type:ai},li=({children:e})=>L(le,{children:[y("span",{children:"["}),e,y("span",{children:"]"})]}),ui=({children:e})=>L(le,{children:[e,y("span",{children:"!"})]}),Oe=({inputType:e})=>{const{setCurrentGraphqlType:t}=$e();let n=e;const i=[];for(;"ofType"in n;)i.push(n[Symbol.toStringTag]),n=n.ofType;return i.reverse().reduce((s,r)=>r==="GraphQLList"?y(li,{children:s}):y(ui,{children:s}),y("span",{className:ci.type,onClick:()=>"name"in n&&t(n.name),children:`${n.name}`}))},pi="_arg-name_1e930_1",di="_arg-block_1e930_5",nt={"arg-name":"_arg-name_1e930_1",argName:pi,"arg-block":"_arg-block_1e930_5",argBlock:di},Ut=({args:e})=>y(le,{children:e==null?void 0:e.map((t,n)=>L("span",{className:Bt({[nt.argBlock]:e.length>1}),children:[y("span",{className:nt.argName,children:t.name}),": ",y(Oe,{inputType:t.type}),n!==e.length-1&&", "]},t.name))}),hi="_field_6eic5_1",fi="_field-name_6eic5_15",it={field:hi,"field-name":"_field-name_6eic5_15",fieldName:fi},mi=({field:e})=>{const{setCurrentGraphqlType:t}=$e();return L("div",{className:it.field,children:[L("div",{children:[y("span",{onClick:()=>t(e.name),className:it.fieldName,children:e.name}),"args"in e&&e.args.length>0&&L(le,{children:["(",y(Ut,{args:e.args}),")"]}),": ",y(Oe,{inputType:e.type})]}),e.description&&y("div",{children:e.description})]})},yi="_previous-button_pzjgd_1",Ti={"previous-button":"_previous-button_pzjgd_1",previousButton:yi},Ni=e=>R.createElement("svg",{height:"1em",viewBox:"0 0 7 10",fill:"none",xmlns:"http://www.w3.org/2000/svg",...e},R.createElement("title",null,"chevron left icon"),R.createElement("path",{d:"M6 1.04819L2 5.04819L6 9.04819",stroke:"currentColor",strokeWidth:1.75})),Ae=()=>{const{previousType:e}=st(n=>n.schema),{getPreviousGraphqlType:t}=$e();return y(le,{children:e!==""&&L(Vt,{className:Ti.previousButton,onClick:()=>t(),children:[y(Ni,{})," ",e]})})},_i=({schemaData:e})=>{var r,a;const t=R.useMemo(()=>Kn(e),[e]),{currentType:n,previousType:i}=st(u=>u.schema),s=t.getType(n);if(!s)if(i===""){const u=(r=t.getQueryType())==null?void 0:r.getFields();if(u&&n in u){const p=u[n];return L("div",{className:O.schema,children:[L("div",{className:O.schemaHeading,children:[y("div",{className:O.name,children:p.name}),y(Ae,{})]}),y("div",{children:p.description}),L("div",{className:O.title,children:[y(tt,{height:16,width:16}),y("span",{children:"Type"})]}),y("div",{className:O.field,children:y(Oe,{inputType:p.type})}),L("div",{className:O.title,children:[y(ri,{height:16,width:16}),y("span",{children:"Arguments"})]}),y("div",{className:O.field,children:y(Ut,{args:p.args})})]})}}else{const u=t.getType(i);if(u instanceof z){const p=u.getFields()[n];return L("div",{className:O.schema,children:[L("div",{className:O.schemaHeading,children:[y("div",{className:O.name,children:p.name}),y(Ae,{})]}),L("div",{className:O.title,children:[y(tt,{height:16,width:16}),y("span",{children:"Type"})]}),y("div",{className:O.field,children:y(Oe,{inputType:p.type})})]})}}if(s instanceof z||s instanceof Qe){const u=s.getFields();return y("div",{className:O.schema,children:u&&L(le,{children:[L("div",{className:O.schemaHeading,children:[y("div",{className:O.name,children:s.name}),y(Ae,{})]}),L("div",{className:O.title,children:[y(oi,{height:16,width:16}),y("span",{children:"Fields"})]}),Object.keys(u).map(p=>y("div",{children:y(mi,{field:u[p]})},p))]})})}return L("div",{className:O.schema,children:[L("div",{className:O.schemaHeading,children:[y("div",{className:O.name,children:s==null?void 0:s.name}),y(Ae,{})]}),y("div",{className:O.field,children:y("div",{className:O.scalarDescription,dangerouslySetInnerHTML:{__html:((a=s==null?void 0:s.description)==null?void 0:a.replace(/`([^`]+)`/g,"<code>$1</code>"))||""}})})]})};export{_i as default};
